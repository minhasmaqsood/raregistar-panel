{"version":3,"sources":["containers/navs/Breadcrumb.js","views/app/categories/index.js","views/app/guides/index.js","views/app/settings/index.js","views/app/faqs/index.js","views/app/partners/index.js","views/app/contact/index.js","views/app/Signals/index.js","views/app/result/index.js","components/table/SearchInput.jsx","components/table/TablePagination.js","components/table/index.js","views/app/VIP-Registration/view.js","views/app/dashboard/comonents/recent-signals.js","views/app/dashboard/dashboard.js"],"names":["getMenuTitle","sub","id","getUrl","path","index","split","BreadcrumbItems","match","substr","paths","length","indexOf","filter","x","className","map","key","active","to","BreadcrumbContainer","heading","CreateCategory","React","lazy","UpdateCategory","AllCategories","Translation","Categories","fallback","exact","from","url","render","props","CreateGuide","UpdateGuide","AllGuides","Guides","TermsAndConditions","PrivacyPolicy","Security","EmailTemplates","UpdateCountryCodes","Settings","CreateFaq","UpdateFaq","AllFaqs","FAQS","CreatePartner","UpdatePartner","AllPartners","Partners","AllContact","Contact","CreateSignal","UpdateSignal","AllSignals","CreateResult","UpdateResult","AllResults","SearchButton","handleFilterChange","style","position","left","Input","name","placeholder","onChange","e","onKeyPress","type","onClick","TablePagination","getSafePage","bind","changePage","changePageSize","renderPageJump","state","page","pageSize","defaultPageSize","Number","isNaN","this","Math","min","max","pages","size","onPageSizeChange","setState","onPageChange","pageNumbers","i","push","DropdownItem","onChangePage","pageSizeOptions","showPageSizeOptions","showPageJump","handleChangeLength","totalPage","currentPage","numberLimit","lastIsActive","firstIsActive","startPoint","endPoint","parseInt","points","firstPageButtonClassName","lastPageButtonClassName","prevPageButtonClassName","nextPageButtonClassName","UncontrolledDropdown","DropdownToggle","caret","color","DropdownMenu","direction","xxs","Nav","NavItem","NavLink","right","Component","ReactTable","activePage","displayLength","total","onChangeLength","data","loading","Table","autoHeight","bordered","cellBordered","virtualized","hover","children","canPrevious","ceil","canNext","Column","HeaderCell","Cell","VIPRegistrations","Pagination","getAllRegistrations","a","spinning","_isMounted","ApiCall","Url","VIP_REGISTRATIONS","config","get","response","status","vipRegistrations","item","user","reverse","waitingRegistrations","registeredRegistrations","allVipRegistrations","JSON","parse","stringify","allWaitingRegistrations","allRegisteredRegistrations","handleChangePage","dataKey","handleChangeWaitingPage","waitingPage","handleChangeRegisteredPage","registeredPage","handleChangeWaitingLength","displayWaitingLength","handleChangeRegisteredLength","displayRegisteredLength","getWaitingData","v","start","getRegisteredData","getData","handleVipFilterChange","filteredData","query","target","value","toLowerCase","email","handleWaitingFilterChange","handleRegisteredFilterChange","toggle","showStatusModal","selectedUser","userId","selectedStatus","handleSelectTypeChange","changeStatus","changingStatus","VIP_REGISTRATIONS_UPDATE","post","NotificationManager","success","selectAll","checked","waitingData","registeredData","Row","Breadcrumb","Col","Card","CardBody","CardTitle","IntlMessages","width","fixed","align","rowData","rowIndex","minWidth","flexGrow","country","ironFxDetail","firstName","lastName","vantageFXAccountNumber","createdAt","Button","Modal","isOpen","ModalHeader","ModalBody","FormGroup","row","sm","ModalFooter","disabled","Users","useState","users","useEffect","getUsers","prevState","ALL_USERS","DefaultDashboard","lg","xl","injectIntl"],"mappings":"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","file":"static/js/dashboards.7bc65044.chunk.js","sourcesContent":["import React, { Fragment } from \"react\";\r\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport IntlMessages from \"../../helpers/IntlMessages\";\r\n\r\nconst getMenuTitle = sub => {\r\n  return <IntlMessages id={`menu.${sub}`} />;\r\n};\r\n\r\nconst getUrl = (path, sub, index) => {\r\n  if (index === 0) {\r\n    return \"\";\r\n  } else {\r\n    return path.split(sub)[0] + sub;\r\n  }\r\n};\r\n\r\nconst BreadcrumbContainer = ({ heading, match }) => {\r\n  return (\r\n    <Fragment>\r\n      {heading && <h1><IntlMessages id={heading}/></h1>}\r\n      <BreadcrumbItems match={match} />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport const BreadcrumbItems = ({ match }) => {\r\n  const path = match.path.substr(1);\r\n  let paths = path.split(\"/\");\r\n  if (paths[paths.length - 1].indexOf(\":\") > -1) {\r\n    paths = paths.filter(x => x.indexOf(\":\") === -1);\r\n  }\r\n  return (\r\n    <Fragment>\r\n      <Breadcrumb className=\"pt-0 breadcrumb-container d-none d-sm-block d-lg-inline-block\">\r\n        {paths.map((sub, index) => {\r\n          return (\r\n            <BreadcrumbItem key={index} active={paths.length === index + 1}>\r\n              {paths.length !== index + 1 ? (\r\n                <NavLink to={\"/\" + getUrl(path, sub, index)}>\r\n                  {getMenuTitle(sub)}\r\n                </NavLink>\r\n              ) : (\r\n                getMenuTitle(sub)\r\n              )}\r\n            </BreadcrumbItem>\r\n          );\r\n        })}\r\n      </Breadcrumb>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default BreadcrumbContainer;\r\n","import React, { Suspense } from 'react';\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\nconst CreateCategory = React.lazy(() =>\r\n    import(/* webpackChunkName: \"create-client\" */ './create')\r\n);\r\nconst UpdateCategory = React.lazy(() =>\r\n    import(/* webpackChunkName: \"create-client\" */ './edit')\r\n);\r\nconst AllCategories = React.lazy(() =>\r\n    import(/* webpackChunkName: \"create-client\" */ './view')\r\n);\r\nconst Translation = React.lazy(() =>\r\n    import(/* webpackChunkName: \"create-client\" */ './translations')\r\n);\r\n\r\nconst Categories = ({ match }) => (\r\n    <Suspense fallback={<div className=\"loading\" />}>\r\n        <Switch>\r\n            <Redirect exact from={`${match.url}/`} to={`${match.url}/view`} />\r\n            <Route\r\n                path={`${match.url}/view`}\r\n                render={props => <AllCategories {...props} />}\r\n            />\r\n            <Route\r\n                path={`${match.url}/create`}\r\n                render={props => <CreateCategory {...props} />}\r\n            />\r\n            <Route\r\n                path={`${match.url}/edit/:slug`}\r\n                render={props => <UpdateCategory {...props} />}\r\n            />\r\n            <Route\r\n                path={`${match.url}/translations/:id`}\r\n                render={props => <Translation {...props} />}\r\n            />\r\n            <Redirect to=\"/error\" />\r\n        </Switch>\r\n    </Suspense>\r\n);\r\nexport default Categories;","import React, { Suspense } from 'react';\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\nconst CreateGuide = React.lazy(() => import( './create'));\r\nconst UpdateGuide = React.lazy(() => import( './edit'));\r\nconst AllGuides = React.lazy(() => import( './view'));\r\nconst Translation = React.lazy(() => import( './translations'));\r\nconst Guides = ({ match }) => (\r\n    <Suspense fallback={<div className=\"loading\" />}>\r\n        <Switch>\r\n            <Redirect exact from={`${match.url}/`} to={`${match.url}/view`} />\r\n            <Route\r\n                path={`${match.url}/view`}\r\n                render={props => <AllGuides {...props} />}\r\n            />\r\n            <Route\r\n                path={`${match.url}/create`}\r\n                render={props => <CreateGuide {...props} />}\r\n            />\r\n            <Route\r\n                path={`${match.url}/edit/:slug`}\r\n                render={props => <UpdateGuide {...props} />}\r\n            />\r\n            <Route\r\n                path={`${match.url}/translations/:id`}\r\n                render={props => <Translation {...props} />}\r\n            />\r\n            <Redirect to=\"/error\" />\r\n        </Switch>\r\n    </Suspense>\r\n);\r\nexport default Guides;","import React, { Suspense } from 'react';\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\n\r\n\r\nconst TermsAndConditions = React.lazy(()=>\r\n    import('./terms')\r\n);\r\n\r\nconst PrivacyPolicy = React.lazy(()=>\r\n    import('./privacy')\r\n);\r\n\r\nconst Security = React.lazy(()=>\r\n    import('./security')\r\n);\r\n\r\nconst EmailTemplates = React.lazy(()=>\r\n    import('./email-templates')\r\n);\r\nconst UpdateCountryCodes = React.lazy(()=>\r\n    import('./countries')\r\n);\r\nconst Translation = React.lazy(() => import( './templates-translations'));\r\n\r\n\r\nconst Settings = ({ match }) => (\r\n    <Suspense fallback={<div className=\"loading\" />}>\r\n        <Switch>\r\n            <Redirect exact from={`${match.url}/`} to={`${match.url}/privacy-policy`} />\r\n            <Route\r\n                path={`${match.url}/privacy-policy`}\r\n                render={props => <PrivacyPolicy {...props} />}\r\n            />\r\n            <Route\r\n                path={`${match.url}/security`}\r\n                render={props => <Security {...props} />}\r\n            />\r\n            <Route\r\n                path={`${match.url}/email-templates/translations/:id`}\r\n                render={props => <Translation {...props} />}\r\n            />\r\n            <Route\r\n                path={`${match.url}/update-countries`}\r\n                render={props => <UpdateCountryCodes {...props} />}\r\n            />\r\n            <Route\r\n                path={`${match.url}/email-templates`}\r\n                render={props => <EmailTemplates {...props} />}\r\n            />\r\n            <Route\r\n                path={`${match.url}/terms-and-conditions`}\r\n                render={props => <TermsAndConditions {...props} />}\r\n            />\r\n            <Redirect to=\"/error\" />\r\n        </Switch>\r\n    </Suspense>\r\n);\r\nexport default Settings;","import React, { Suspense } from 'react';\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\nconst CreateFaq = React.lazy(() =>\r\n    import(/* webpackChunkName: \"create-client\" */ './create')\r\n);\r\nconst UpdateFaq = React.lazy(() =>\r\n    import(/* webpackChunkName: \"create-client\" */ './edit')\r\n);\r\nconst AllFaqs = React.lazy(() =>\r\n    import(/* webpackChunkName: \"create-client\" */ './view')\r\n);\r\nconst Translation = React.lazy(() =>\r\n    import(/* webpackChunkName: \"create-client\" */ './translation')\r\n);\r\n\r\nconst FAQS = ({ match }) => (\r\n    <Suspense fallback={<div className=\"loading\" />}>\r\n        <Switch>\r\n            <Redirect exact from={`${match.url}/`} to={`${match.url}/view`} />\r\n            <Route\r\n                path={`${match.url}/view`}\r\n                render={props => <AllFaqs {...props} />}\r\n            />\r\n            <Route\r\n                path={`${match.url}/create`}\r\n                render={props => <CreateFaq {...props} />}\r\n            />\r\n            <Route\r\n                path={`${match.url}/edit/:slug`}\r\n                render={props => <UpdateFaq {...props} />}\r\n            />\r\n            <Route\r\n                path={`${match.url}/translations/:id`}\r\n                render={props => <Translation {...props} />}\r\n            />\r\n            <Redirect to=\"/error\" />\r\n        </Switch>\r\n    </Suspense>\r\n);\r\nexport default FAQS;","import React, { Suspense } from 'react';\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\nconst CreatePartner = React.lazy(() =>\r\n    import(/* webpackChunkName: \"create-client\" */ './create')\r\n);\r\nconst UpdatePartner = React.lazy(() =>\r\n    import(/* webpackChunkName: \"create-client\" */ './edit')\r\n);\r\nconst AllPartners = React.lazy(() =>\r\n    import(/* webpackChunkName: \"create-client\" */ './view')\r\n);\r\n\r\nconst Partners = ({ match }) => (\r\n    <Suspense fallback={<div className=\"loading\" />}>\r\n        <Switch>\r\n            <Redirect exact from={`${match.url}/`} to={`${match.url}/view`} />\r\n            <Route\r\n                path={`${match.url}/view`}\r\n                render={props => <AllPartners {...props} />}\r\n            />\r\n            <Route\r\n                path={`${match.url}/create`}\r\n                render={props => <CreatePartner {...props} />}\r\n            />\r\n            <Route\r\n                path={`${match.url}/edit/:slug`}\r\n                render={props => <UpdatePartner {...props} />}\r\n            />\r\n            <Redirect to=\"/error\" />\r\n        </Switch>\r\n    </Suspense>\r\n);\r\nexport default Partners;","import React, { Suspense } from 'react';\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\n\r\n// const ViewContact = React.lazy(() =>\r\n//     import(/* webpackChunkName: \"create-client\" */ './edit')\r\n// );\r\nconst AllContact = React.lazy(() =>\r\n    import(/* webpackChunkName: \"create-client\" */ './view')\r\n);\r\n\r\nconst Contact = ({ match }) => (\r\n    <Suspense fallback={<div className=\"loading\" />}>\r\n        <Switch>\r\n            <Redirect exact from={`${match.url}/`} to={`${match.url}/view`} />\r\n            <Route\r\n                path={`${match.url}/view`}\r\n                render={props => <AllContact {...props} />}\r\n            />\r\n            <Redirect to=\"/error\" />\r\n        </Switch>\r\n    </Suspense>\r\n);\r\nexport default Contact;","import React, { Suspense } from 'react';\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\nconst CreateSignal = React.lazy(() => import(/* webpackChunkName: \"create-guide\" */ './create'));\r\nconst UpdateSignal = React.lazy(() => import(/* webpackChunkName: \"create-guide\" */ './edit'));\r\nconst AllSignals = React.lazy(() => import(/* webpackChunkName: \"create-guide\" */ './view'));\r\n\r\nconst Guides = ({ match }) => (\r\n    <Suspense fallback={<div className=\"loading\" />}>\r\n        <Switch>\r\n            <Redirect exact from={`${match.url}/`} to={`${match.url}/view`} />\r\n            <Route\r\n                path={`${match.url}/view`}\r\n                render={props => <AllSignals {...props} />}\r\n            />\r\n            <Route\r\n                path={`${match.url}/create`}\r\n                render={props => <CreateSignal {...props} />}\r\n            />\r\n            <Route\r\n                path={`${match.url}/edit/:id`}\r\n                render={props => <UpdateSignal {...props} />}\r\n            />\r\n            <Redirect to=\"/error\" />\r\n        </Switch>\r\n    </Suspense>\r\n);\r\nexport default Guides;","import React, { Suspense } from 'react';\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\nconst CreateResult = React.lazy(() => import( './create'));\r\nconst UpdateResult = React.lazy(() => import( './edit'));\r\nconst AllResults = React.lazy(() => import( './view'));\r\nconst Translation = React.lazy(() => import('./translations'));\r\nconst Guides = ({ match }) => (\r\n    <Suspense fallback={<div className=\"loading\" />}>\r\n        <Switch>\r\n            <Redirect exact from={`${match.url}/`} to={`${match.url}/view`} />\r\n            <Route\r\n                path={`${match.url}/view`}\r\n                render={props => <AllResults {...props} />}\r\n            />\r\n            <Route\r\n                path={`${match.url}/create`}\r\n                render={props => <CreateResult {...props} />}\r\n            />\r\n            <Route\r\n                path={`${match.url}/edit/:id`}\r\n                render={props => <UpdateResult {...props} />}\r\n            />\r\n            <Route\r\n                path={`${match.url}/translations/:id`}\r\n                render={props => <Translation {...props} />}\r\n            />\r\n            <Redirect to=\"/error\" />\r\n        </Switch>\r\n    </Suspense>\r\n);\r\nexport default Guides;","import React from \"react\";\r\nimport {Input} from \"reactstrap\";\r\n\r\nconst SearchButton = ({handleFilterChange}) => {\r\n    return (\r\n        <div className='container d-flex justify-content-end'\r\n             style={{position: \"relative\", left: '15px'}}\r\n        >\r\n            <div className='row'>\r\n                <div className='col-12 mb-2'\r\n                >\r\n                    <div className=\"input-group\">\r\n                        <Input\r\n                            name=\"searchKeyword\"\r\n                            id=\"searchKeyword\"\r\n                            placeholder={\"Search here\"}\r\n                            onChange={e => handleFilterChange(e)}\r\n                            onKeyPress={e => handleFilterChange(e)}\r\n                        />\r\n                        <div className=\"input-group-append\">\r\n                            <button className=\"btn btn-secondary\" type=\"button\">\r\n                                                              <span\r\n                                                                  className=\"search-icon\"\r\n                                                                  onClick={e => handleFilterChange(e)}\r\n                                                              >\r\n                                                                      <i className=\"simple-icon-magnifier\" />\r\n                                                                    </span>\r\n\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default SearchButton;","import React, {Component, Fragment} from \"react\";\r\nimport {DropdownItem, DropdownMenu, DropdownToggle, Nav, NavItem, NavLink, UncontrolledDropdown} from \"reactstrap\";\r\nimport {Colxx} from \"../common/CustomBootstrap\";\r\n\r\nexport default class TablePagination extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.getSafePage = this.getSafePage.bind(this);\r\n        this.changePage = this.changePage.bind(this);\r\n        this.changePageSize = this.changePageSize.bind(this);\r\n        this.renderPageJump = this.renderPageJump.bind(this);\r\n\r\n        this.state = {\r\n            page: props.page,\r\n            pageSize: this.props.defaultPageSize\r\n        };\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        return {page: props.page};\r\n    }\r\n\r\n    getSafePage(page) {\r\n        if (Number.isNaN(page)) {\r\n            page = this.props.page;\r\n        }\r\n        return Math.min(Math.max(page, 0), this.props.pages - 1);\r\n    }\r\n\r\n    changePageSize(size) {\r\n        this.props.onPageSizeChange(size);\r\n        this.setState({ pageSize: size });\r\n    }\r\n\r\n    changePage(page) {\r\n        page = this.getSafePage(page);\r\n        this.setState({ page });\r\n        if (this.props.page !== page) {\r\n            this.props.onPageChange(page);\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    renderPageJump() {\r\n        let pages = this.props.pages;\r\n        let pageNumbers = [];\r\n        for (let i = 0; i < pages; i++) {\r\n            pageNumbers.push(\r\n                <DropdownItem\r\n                    key={i}\r\n                    onClick={() => this.changePage(i)}\r\n                >\r\n                    {i + 1}\r\n                </DropdownItem>\r\n            );\r\n        }\r\n        return pageNumbers;\r\n    }\r\n    onChangePage(e) {\r\n        this.props.onChangePage(e);\r\n    }\r\n    render() {\r\n        const {\r\n            pages,\r\n            pageSizeOptions,\r\n            pageSize,\r\n            showPageSizeOptions,\r\n            showPageJump,handleChangeLength\r\n        } = this.props;\r\n        // 1 4 true true, [1, 2, 3 ,4], true, true,\r\n        const {\r\n            totalPage = 0,\r\n            currentPage = 1,\r\n            numberLimit = 5,\r\n            lastIsActive = true,\r\n            firstIsActive = true\r\n        } = this.props;\r\n\r\n        let startPoint = 1;\r\n        let endPoint = numberLimit;\r\n\r\n        if (numberLimit > totalPage) {\r\n            startPoint = 1;\r\n            endPoint = totalPage;\r\n        } else if (currentPage <= parseInt(numberLimit / 2, 10)) {\r\n            startPoint = 1;\r\n            endPoint = numberLimit;\r\n        } else if (currentPage + parseInt(numberLimit / 2, 10) <= totalPage) {\r\n            startPoint = currentPage - parseInt(numberLimit / 2, 10);\r\n            endPoint = currentPage + parseInt(numberLimit / 2, 10);\r\n        } else {\r\n            startPoint = totalPage - (numberLimit - 1);\r\n            endPoint = totalPage;\r\n        }\r\n        startPoint = startPoint === 0 ? 1 : startPoint;\r\n        const points = [];\r\n        for (var i = startPoint; i <= endPoint; i++) {\r\n            points.push(i);\r\n        }\r\n\r\n        let firstPageButtonClassName = currentPage <= 1 ? \"disabled\" : \"\";\r\n        let lastPageButtonClassName = currentPage >= totalPage ? \"disabled\" : \"\";\r\n        let prevPageButtonClassName = currentPage <= 1 ? \"disabled\" : \"\";\r\n        let nextPageButtonClassName = currentPage >= totalPage ? \"disabled\" : \"\";\r\n        return (\r\n            <Fragment>\r\n                <div className=\"text-center\">\r\n                    {\r\n                        showPageJump &&\r\n                        <div className=\"float-left pt-2\"><span>Page </span>\r\n                            <UncontrolledDropdown className=\"d-inline-block\">\r\n                                <DropdownToggle caret color=\"outline-primary\" size=\"xs\">\r\n                                    {this.state.page + 1}\r\n                                </DropdownToggle>\r\n                                <DropdownMenu direction=\"left\" >\r\n                                    {this.renderPageJump()}\r\n                                </DropdownMenu>\r\n                            </UncontrolledDropdown>\r\n                            <span> of </span>{pages}</div>\r\n                    }\r\n\r\n                    {totalPage > 0 ? (\r\n                        <Colxx xxs=\"12\" className=\"mt-3\">\r\n                            <Nav className=\"pagination justify-content-center\">\r\n                                {firstIsActive && (\r\n                                    <NavItem className={`page-item ${firstPageButtonClassName} cursor-pointer`}>\r\n                                        <NavLink\r\n                                            className=\"page-link first\"\r\n                                            onClick={() => this.onChangePage(1)}>\r\n                                            <i className=\"simple-icon-control-start\"/>\r\n                                        </NavLink>\r\n                                    </NavItem>\r\n                                )}\r\n\r\n                                <NavItem className={`page-item ${prevPageButtonClassName}`}>\r\n                                    <NavLink\r\n                                        className=\"page-link prev\"\r\n                                        onClick={() => this.onChangePage(currentPage - 1)}\r\n                                    >\r\n                                        <i className=\"simple-icon-arrow-left\"/>\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                {points.map(i => {\r\n                                    return (\r\n                                        <NavItem\r\n                                            key={i}\r\n                                            className={`page-item ${currentPage === i? \"active\" : 'cursor-pointer'}`}>\r\n                                            <NavLink\r\n                                                className=\"page-link\"\r\n                                                onClick={() => this.onChangePage(i)}\r\n                                            >\r\n                                                {i}\r\n                                            </NavLink>\r\n                                        </NavItem>\r\n                                    );\r\n                                })}\r\n\r\n                                <NavItem className={`page-item ${nextPageButtonClassName}`}>\r\n\r\n                                    <NavLink\r\n                                        className=\"page-link next\"\r\n                                        onClick={() => this.onChangePage(currentPage + 1)}\r\n                                    >\r\n                                        <i className=\"simple-icon-arrow-right\"/>\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                {lastIsActive && (\r\n                                    <NavItem className={`page-item ${lastPageButtonClassName} cursor-pointer`}>\r\n                                        <NavLink\r\n                                            className=\"page-link last\"\r\n                                            onClick={() => this.onChangePage(totalPage)}>\r\n                                            <i className=\"simple-icon-control-end\"/>\r\n                                        </NavLink>\r\n                                    </NavItem>\r\n                                )}\r\n                            </Nav>\r\n                        </Colxx>\r\n                    ) : (\r\n                        <Colxx xxs=\"12\" className=\"mt-2\"/>\r\n                    )}\r\n                    {\r\n                        showPageSizeOptions &&\r\n                        <div className=\"float-right pt-2\">\r\n                            <span className=\"text-muted text-small mr-1\">Items </span>\r\n                            <UncontrolledDropdown className=\"d-inline-block\">\r\n                                <DropdownToggle caret color=\"outline-primary\" size=\"xs\">\r\n                                    {pageSize}\r\n                                </DropdownToggle>\r\n                                <DropdownMenu right>\r\n                                    {pageSizeOptions.map((size, index) => {\r\n                                        return (\r\n                                            <DropdownItem\r\n                                                key={index}\r\n                                                onClick={() => handleChangeLength(size)}\r\n                                            >\r\n                                                {size}\r\n                                            </DropdownItem>\r\n                                        );\r\n                                    })}\r\n                                </DropdownMenu>\r\n                            </UncontrolledDropdown>\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n","import React, { Component, Fragment } from 'react'\r\nimport {Table} from \"rsuite\";\r\nimport './table.css';\r\nimport SearchButton from \"./SearchInput\";\r\nimport TablePagination from \"./TablePagination\";\r\nexport default class ReactTable extends Component {\r\n\r\n    render() {\r\n        const   {\r\n            activePage,\r\n            displayLength,\r\n            total,\r\n            onChangePage,\r\n            onChangeLength,\r\n            data,\r\n            loading,\r\n            handleFilterChange\r\n        } = this.props\r\n        return (\r\n            <Fragment>\r\n                <SearchButton\r\n                    handleFilterChange={handleFilterChange}\r\n                />\r\n\r\n                <Table autoHeight={true}\r\n                       data={data}\r\n                       bordered\r\n                       cellBordered\r\n                       virtualized={false}\r\n                       hover={true}\r\n                       loading={loading}\r\n                >\r\n                    {this.props.children}\r\n                </Table>\r\n                <div className='mt-4 m-2'>\r\n                    <TablePagination\r\n                        handleChangeLength={onChangeLength}\r\n                        pageSizeOptions={[5, 10, 25, 50, 100]}\r\n                        onChangePage={onChangePage}\r\n                        showPageSizeOptions={true}\r\n                        pageSize={displayLength}\r\n                        canPrevious={true}\r\n                        currentPage={activePage}\r\n                        totalPage={Math.ceil(total/displayLength)}\r\n                        pages={Math.ceil(total/displayLength)}\r\n                        canNext={true}\r\n                    />\r\n                </div>\r\n            </Fragment>\r\n        )\r\n    }\r\n}","import React, { Component, Fragment } from \"react\";\r\nimport {\r\n    Row,\r\n    Col,\r\n    CardBody,\r\n    CardTitle,\r\n    Card,\r\n    Button,\r\n    Modal,\r\n    ModalBody,\r\n    ModalFooter,\r\n    ModalHeader,\r\n    // Label,\r\n    FormGroup\r\n} from \"reactstrap\";\r\nimport IntlMessages from \"../../../helpers/IntlMessages\";\r\nimport { Colxx, Separator } from \"../../../components/common/CustomBootstrap\";\r\nimport Breadcrumb from \"../../../containers/navs/Breadcrumb\";\r\nimport ApiCall from '../../../config/network';\r\nimport Url from '../../../config/api';\r\nimport { NotificationManager } from \"../../../components/common/react-notifications\";\r\nimport {config} from \"../../../config/env\";\r\n// import { confirmAlert } from 'react-confirm-alert';\r\n// import {Link} from \"react-router-dom\";\r\nimport {Table} from \"rsuite\";\r\nimport '../table.css';\r\nimport ReactTable from \"../../../components/table\";\r\nconst { Column, HeaderCell, Cell, Pagination } = Table;\r\nexport default class VIPRegistrations extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            selectAll: false,\r\n            vipRegistrations: [],\r\n            allVipRegistrations: [],\r\n            waitingRegistrations: [],\r\n            allWaitingRegistrations: [],\r\n            registeredRegistrations: [],\r\n            allRegisteredRegistrations: [],\r\n            checked: [],\r\n            spinning: false,\r\n            selectedUser: '',\r\n            userId: null,\r\n            selectedStatus: '',\r\n            changingStatus: false,\r\n            showStatusModal: false,\r\n            //Pagination\r\n            displayLength: 10,\r\n            page: 1,\r\n            displayWaitingLength: 10,\r\n            waitingPage: 1,\r\n            displayRegisteredLength: 10,\r\n            registeredPage: 1,\r\n        };\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this._isMounted = false\r\n        this.getAllRegistrations();\r\n    };\r\n    getAllRegistrations = async ()=> {\r\n        this.setState({spinning: true});\r\n        if(!this._isMounted){\r\n            let response = await ApiCall.get(Url.VIP_REGISTRATIONS, await config())\r\n            if(response.status=== 200){\r\n                // console.log(response)\r\n                let vipRegistrations = response.data.vipRegistrations.filter(item => item.user.status === 'vip').reverse();\r\n                let waitingRegistrations = response.data.vipRegistrations.filter(item => item.user.status === 'waiting').reverse();\r\n                let registeredRegistrations = response.data.vipRegistrations.filter(item => item.user.status === 'registered').reverse();\r\n                this.setState({\r\n                    vipRegistrations,\r\n                    waitingRegistrations,\r\n                    registeredRegistrations,\r\n                    allVipRegistrations: JSON.parse(JSON.stringify(vipRegistrations)),\r\n                    allWaitingRegistrations: JSON.parse(JSON.stringify(waitingRegistrations)),\r\n                allRegisteredRegistrations: JSON.parse(JSON.stringify(registeredRegistrations)),\r\n                    spinning: false\r\n                });\r\n            }\r\n        }\r\n\r\n    };\r\n    componentWillUnmount() {\r\n        this._isMounted = true\r\n    }\r\n\r\n\r\n    handleChangePage=(dataKey)=> {\r\n        // console.log(dataKey)\r\n        this.setState({\r\n            page: dataKey\r\n        });\r\n    };\r\n    handleChangeWaitingPage=(dataKey)=> {\r\n        // console.log(dataKey)\r\n        this.setState({\r\n            waitingPage: dataKey\r\n        });\r\n    };\r\n\r\n    handleChangeRegisteredPage=(dataKey)=> {\r\n        // console.log(dataKey)\r\n        this.setState({\r\n            registeredPage: dataKey\r\n        });\r\n    };\r\n    handleChangeLength=(dataKey)=> {\r\n        this.setState({\r\n            page: 1,\r\n            displayLength: dataKey\r\n        });\r\n    };\r\n    handleChangeWaitingLength=(dataKey)=> {\r\n        this.setState({\r\n            waitingPage: 1,\r\n            displayWaitingLength: dataKey\r\n        });\r\n    };\r\n    handleChangeRegisteredLength=(dataKey)=> {\r\n        this.setState({\r\n            registeredPage: 1,\r\n            displayRegisteredLength: dataKey\r\n        });\r\n    };\r\n\r\n    getWaitingData =() => {\r\n        const { displayWaitingLength, waitingPage } = this.state;\r\n        return this.state.allWaitingRegistrations.filter((v, i) => {\r\n            const start = displayWaitingLength * (waitingPage - 1);\r\n            const end = start + displayWaitingLength;\r\n            return i >= start && i < end;\r\n        });\r\n    };\r\n\r\n    getRegisteredData =() => {\r\n        const { displayRegisteredLength, registeredPage } = this.state;\r\n        return this.state.allRegisteredRegistrations.filter((v, i) => {\r\n            const start = displayRegisteredLength * (registeredPage - 1);\r\n            const end = start + displayRegisteredLength;\r\n            return i >= start && i < end;\r\n        });\r\n    };\r\n\r\n    getData =() => {\r\n        const { displayLength, page } = this.state;\r\n        return this.state.allVipRegistrations.filter((v, i) => {\r\n            const start = displayLength * (page - 1);\r\n            const end = start + displayLength;\r\n            return i >= start && i < end;\r\n        });\r\n    };\r\n\r\n    handleVipFilterChange = (e) => {\r\n        this.setState({page: 1})\r\n        const data = this.state.vipRegistrations.filter((v, i) => {\r\n            const start = 1000 * (1 - 1);\r\n            const end = start + 1000;\r\n            return i >= start && i < end;\r\n        })\r\n        const filteredData = data.filter(item => {\r\n            const query = e.target.value.toLowerCase();\r\n            return (\r\n                item.user.name.toLowerCase().indexOf(query) >= 0 ||\r\n                item.user.email.toLowerCase().indexOf(query) >= 0\r\n            )\r\n        });\r\n        this.setState({\r\n            allVipRegistrations: filteredData\r\n        })\r\n        if(e.target.value=== ''){\r\n            this.setState({\r\n                allVipRegistrations: this.state.vipRegistrations\r\n            })\r\n        }\r\n    };\r\n\r\n    handleWaitingFilterChange = (e) => {\r\n        this.setState({page: 1})\r\n        const data = this.state.waitingRegistrations.filter((v, i) => {\r\n            const start = 1000 * (1 - 1);\r\n            const end = start + 1000;\r\n            return i >= start && i < end;\r\n        })\r\n        const filteredData = data.filter(item => {\r\n            const query = e.target.value.toLowerCase();\r\n            return (\r\n                item.user.name.toLowerCase().indexOf(query) >= 0 ||\r\n                item.user.email.toLowerCase().indexOf(query) >= 0\r\n            )\r\n        });\r\n        this.setState({\r\n            allWaitingRegistrations: filteredData\r\n        })\r\n        if(e.target.value=== ''){\r\n            this.setState({\r\n                allWaitingRegistrations: this.state.waitingRegistrations\r\n            })\r\n        }\r\n    };\r\n\r\n    handleRegisteredFilterChange = (e) => {\r\n        this.setState({page: 1})\r\n        const data = this.state.registeredRegistrations.filter((v, i) => {\r\n            const start = 1000 * (1 - 1);\r\n            const end = start + 1000;\r\n            return i >= start && i < end;\r\n        })\r\n        const filteredData = data.filter(item => {\r\n            const query = e.target.value.toLowerCase();\r\n            return (\r\n                item.user.name.toLowerCase().indexOf(query) >= 0 ||\r\n                item.user.email.toLowerCase().indexOf(query) >= 0\r\n            )\r\n        });\r\n        this.setState({\r\n            allRegisteredRegistrations: filteredData\r\n        })\r\n        if(e.target.value=== ''){\r\n            this.setState({\r\n                allRegisteredRegistrations: this.state.registeredRegistrations\r\n            })\r\n        }\r\n    };\r\n\r\n    toggle = (item) => {\r\n        this.setState({\r\n            showStatusModal: !this.state.showStatusModal\r\n        })\r\n        if(item.user){\r\n            this.setState({\r\n                selectedUser: item.user,\r\n                userId: item.id,\r\n                selectedStatus: item.user.status === 'waiting'? 'vip' : item.user.status === 'vip'?  'registered' : 'vip'\r\n            })\r\n        }\r\n    };\r\n\r\n    handleSelectTypeChange = (e) => {\r\n            this.setState({selectedStatus: e.target.value})\r\n    };\r\n\r\n    changeStatus =async () => {\r\n        this.setState({changingStatus: true})\r\n        let response = await ApiCall.post(Url.VIP_REGISTRATIONS_UPDATE,{\r\n            id: this.state.userId,\r\n            status: this.state.selectedStatus\r\n        } ,await config());\r\n        if(response.status === 200){\r\n            // console.log(response)\r\n            this.getAllRegistrations()\r\n            this.setState({\r\n                changingStatus: false,\r\n                showStatusModal: false\r\n            })\r\n            return  NotificationManager.success(\r\n                \"Status Changed Successfully\",\r\n                \"Success\",\r\n                3000,\r\n                null,\r\n                null,\r\n                'filled'\r\n            );\r\n        }else {\r\n            this.setState({\r\n                changingStatus: false,\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const data = this.getData();\r\n        const waitingData = this.getWaitingData();\r\n        const registeredData = this.getRegisteredData();\r\n        return (\r\n            <Fragment>\r\n                <Row>\r\n                    <Colxx xxs=\"12\">\r\n                        <Breadcrumb heading=\"view\" match={this.props.match} />\r\n                        <Separator className=\"mb-5\" />\r\n                    </Colxx>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <Card className=\"h-100\">\r\n                            <CardBody>\r\n                                <CardTitle>\r\n                                    <IntlMessages id={\"vipRegistration\"} />\r\n                                </CardTitle>\r\n                                <ReactTable\r\n                                    data={data}\r\n                                    loading={this.state.spinning}\r\n                                    activePage={this.state.page}\r\n                                    displayLength={this.state.displayLength}\r\n                                    total={this.state.allVipRegistrations.length}\r\n                                    onChangePage={this.handleChangePage}\r\n                                    onChangeLength={this.handleChangeLength}\r\n                                    handleFilterChange={this.handleVipFilterChange}\r\n                                >\r\n                                    <Column width={50} fixed align=\"center\">\r\n                                        <HeaderCell>No</HeaderCell>\r\n                                        <Cell>\r\n                                            {(rowData, rowIndex) => {\r\n                                                return <span>{rowIndex +1}</span>\r\n                                            }}\r\n                                        </Cell>\r\n                                    </Column>\r\n                                    <Column minWidth={200}  flexGrow={1} align=\"center\">\r\n                                        <HeaderCell> DataTrades Name</HeaderCell>\r\n                                        <Cell>\r\n                                            {(rowData, rowIndex) => {\r\n                                                return <span>{rowData.user.name}</span>\r\n                                            }}\r\n                                        </Cell>\r\n                                    </Column>\r\n                                    <Column minWidth={200}  flexGrow={1} align=\"center\">\r\n                                        <HeaderCell>DataTrades Email</HeaderCell>\r\n                                        <Cell>\r\n                                            {(rowData, rowIndex) => {\r\n                                                return <span>{rowData.user.email}</span>\r\n                                            }}\r\n                                        </Cell>\r\n                                    </Column>\r\n                                    <Column minWidth={200} flexGrow={1} align=\"center\">\r\n                                        <HeaderCell>DataTrades Country</HeaderCell>\r\n                                        <Cell>\r\n                                            {(rowData, rowIndex) => {\r\n                                                return <span>{rowData.country.name}</span>\r\n                                            }}\r\n                                        </Cell>\r\n                                    </Column>\r\n                                    <Column minWidth={150}  flexGrow={1} align=\"center\">\r\n                                        <HeaderCell>Iron FX Name</HeaderCell>\r\n                                        <Cell>\r\n                                            {(rowData, rowIndex) => {\r\n                                                return <span>{rowData.ironFxDetail? `${rowData.ironFxDetail.firstName} ${rowData.ironFxDetail.lastName}` : \"-\"}</span>\r\n                                            }}\r\n                                        </Cell>\r\n                                    </Column>\r\n                                    <Column minWidth={150}  flexGrow={1} align=\"center\">\r\n                                        <HeaderCell>Iron FX Email</HeaderCell>\r\n                                        <Cell>\r\n                                            {(rowData, rowIndex) => {\r\n                                                return <span>{rowData.ironFxDetail? `${rowData.ironFxDetail.email}` : \"-\"}</span>\r\n                                            }}\r\n                                        </Cell>\r\n                                    </Column>\r\n                                    <Column minWidth={150}  flexGrow={1} align=\"center\">\r\n                                        <HeaderCell>Iron FX Country</HeaderCell>\r\n                                        <Cell>\r\n                                            {(rowData, rowIndex) => {\r\n                                                return <span>{rowData.ironFxDetail? `${rowData.ironFxDetail.country}` : \"-\"}</span>\r\n                                            }}\r\n                                        </Cell>\r\n                                    </Column>\r\n                                    <Column minWidth={80}  flexGrow={1} align=\"center\">\r\n                                        <HeaderCell>Status</HeaderCell>\r\n                                        <Cell>\r\n                                            {(rowData, rowIndex) => {\r\n                                                return <span>{rowData.user.status}</span>\r\n                                            }}\r\n                                        </Cell>\r\n                                    </Column>\r\n                                    <Column minWidth={80}  flexGrow={1} align=\"center\">\r\n                                        <HeaderCell>Account No</HeaderCell>\r\n                                        <Cell>\r\n                                            {(rowData, rowIndex) => {\r\n                                                return <span>{rowData.vantageFXAccountNumber}</span>\r\n                                            }}\r\n                                        </Cell>\r\n                                    </Column>\r\n                                    <Column minWidth={100}  flexGrow={1} align=\"center\">\r\n                                        <HeaderCell>Created At</HeaderCell>\r\n                                        <Cell>\r\n                                            {(rowData, rowIndex) => {\r\n                                                return <span>{rowData.createdAt}</span>\r\n                                            }}\r\n                                        </Cell>\r\n                                    </Column>\r\n                                    <Column minWidth={150}  flexGrow={1} align=\"center\">\r\n                                        <HeaderCell>Actions</HeaderCell>\r\n                                        <Cell>\r\n                                            {(rowData, rowIndex) => {\r\n                                                return <div>\r\n                                                    <Button color=\"info\" size=\"xs\" className=\"mb-2\" onClick={()=> this.toggle(rowData)}>\r\n                                                        Change Status\r\n                                                    </Button>\r\n                                                </div>\r\n                                            }}\r\n                                        </Cell>\r\n                                    </Column>\r\n                                </ReactTable>\r\n                                <CardTitle>\r\n                                    <IntlMessages id={\"waitingRegistration\"} />\r\n                                </CardTitle>\r\n                                <ReactTable\r\n                                    data={waitingData}\r\n                                    loading={this.state.spinning}\r\n                                    activePage={this.state.waitingPage}\r\n                                    displayLength={this.state.displayWaitingLength}\r\n                                    total={this.state.allWaitingRegistrations.length}\r\n                                    onChangePage={this.handleChangeWaitingPage}\r\n                                    onChangeLength={this.handleChangeWaitingLength}\r\n                                    handleFilterChange={this.handleWaitingFilterChange}\r\n                                >\r\n                                    <Column width={50} fixed align=\"center\">\r\n                                        <HeaderCell>No</HeaderCell>\r\n                                        <Cell>\r\n                                            {(rowData, rowIndex) => {\r\n                                                return <span>{rowIndex +1}</span>\r\n                                            }}\r\n                                        </Cell>\r\n                                    </Column>\r\n                                    <Column minWidth={200}  flexGrow={1} align=\"center\">\r\n                                        <HeaderCell> DataTrades Name</HeaderCell>\r\n                                        <Cell>\r\n                                            {(rowData, rowIndex) => {\r\n                                                return <span>{rowData.user.name}</span>\r\n                                            }}\r\n                                        </Cell>\r\n                                    </Column>\r\n                                    <Column minWidth={200}  flexGrow={1} align=\"center\">\r\n                                        <HeaderCell>DataTrades Email</HeaderCell>\r\n                                        <Cell>\r\n                                            {(rowData, rowIndex) => {\r\n                                                return <span>{rowData.user.email}</span>\r\n                                            }}\r\n                                        </Cell>\r\n                                    </Column>\r\n                                    <Column minWidth={200} flexGrow={1} align=\"center\">\r\n                                        <HeaderCell>DataTrades Country</HeaderCell>\r\n                                        <Cell>\r\n                                            {(rowData, rowIndex) => {\r\n                                                return <span>{rowData.country.name}</span>\r\n                                            }}\r\n                                        </Cell>\r\n                                    </Column>\r\n                                    <Column minWidth={150}  flexGrow={1} align=\"center\">\r\n                                        <HeaderCell>Iron FX Name</HeaderCell>\r\n                                        <Cell>\r\n                                            {(rowData, rowIndex) => {\r\n                                                return <span>{rowData.ironFxDetail? `${rowData.ironFxDetail.firstName} ${rowData.ironFxDetail.lastName}` : \"-\"}</span>\r\n                                            }}\r\n                                        </Cell>\r\n                                    </Column>\r\n                                    <Column minWidth={150}  flexGrow={1} align=\"center\">\r\n                                        <HeaderCell>Iron FX Email</HeaderCell>\r\n                                        <Cell>\r\n                                            {(rowData, rowIndex) => {\r\n                                                return <span>{rowData.ironFxDetail? `${rowData.ironFxDetail.email}` : \"-\"}</span>\r\n                                            }}\r\n                                        </Cell>\r\n                                    </Column>\r\n                                    <Column minWidth={150}  flexGrow={1} align=\"center\">\r\n                                        <HeaderCell>Iron FX Country</HeaderCell>\r\n                                        <Cell>\r\n                                            {(rowData, rowIndex) => {\r\n                                                return <span>{rowData.ironFxDetail? `${rowData.ironFxDetail.country}` : \"-\"}</span>\r\n                                            }}\r\n                                        </Cell>\r\n                                    </Column>\r\n                                    <Column minWidth={80}  flexGrow={1} align=\"center\">\r\n                                        <HeaderCell>Status</HeaderCell>\r\n                                        <Cell>\r\n                                            {(rowData, rowIndex) => {\r\n                                                return <span>{rowData.user.status}</span>\r\n                                            }}\r\n                                        </Cell>\r\n                                    </Column>\r\n                                    <Column minWidth={80}  flexGrow={1} align=\"center\">\r\n                                        <HeaderCell>Account No</HeaderCell>\r\n                                        <Cell>\r\n                                            {(rowData, rowIndex) => {\r\n                                                return <span>{rowData.vantageFXAccountNumber}</span>\r\n                                            }}\r\n                                        </Cell>\r\n                                    </Column>\r\n                                    <Column minWidth={100}  flexGrow={1} align=\"center\">\r\n                                        <HeaderCell>Created At</HeaderCell>\r\n                                        <Cell>\r\n                                            {(rowData, rowIndex) => {\r\n                                                return <span>{rowData.createdAt}</span>\r\n                                            }}\r\n                                        </Cell>\r\n                                    </Column>\r\n                                    <Column minWidth={150}  flexGrow={1} align=\"center\">\r\n                                        <HeaderCell>Actions</HeaderCell>\r\n                                        <Cell>\r\n                                            {(rowData, rowIndex) => {\r\n                                                return <div>\r\n                                                    <Button color=\"info\" size=\"xs\" className=\"mb-2\" onClick={()=> this.toggle(rowData)}>\r\n                                                        Change Status\r\n                                                    </Button>\r\n                                                </div>\r\n                                            }}\r\n                                        </Cell>\r\n                                    </Column>\r\n                                </ReactTable>\r\n                                <CardTitle>\r\n                                    {/*<IntlMessages id={\"waitingRegistration\"} />*/}\r\n                                    Registered Users\r\n                                </CardTitle>\r\n                                <ReactTable\r\n                                    data={registeredData}\r\n                                    loading={this.state.spinning}\r\n                                    activePage={this.state.registeredPage}\r\n                                    displayLength={this.state.displayRegisteredLength}\r\n                                    total={this.state.allRegisteredRegistrations.length}\r\n                                    onChangePage={this.handleChangeRegisteredPage}\r\n                                    onChangeLength={this.handleChangeRegisteredLength}\r\n                                    handleFilterChange={this.handleRegisteredFilterChange}\r\n                                >\r\n                                    <Column width={50} fixed align=\"center\">\r\n                                        <HeaderCell>No</HeaderCell>\r\n                                        <Cell>\r\n                                            {(rowData, rowIndex) => {\r\n                                                return <span>{rowIndex +1}</span>\r\n                                            }}\r\n                                        </Cell>\r\n                                    </Column>\r\n                                    <Column minWidth={200}  flexGrow={1} align=\"center\">\r\n                                        <HeaderCell> DataTrades Name</HeaderCell>\r\n                                        <Cell>\r\n                                            {(rowData, rowIndex) => {\r\n                                                return <span>{rowData.user.name}</span>\r\n                                            }}\r\n                                        </Cell>\r\n                                    </Column>\r\n                                    <Column minWidth={200}  flexGrow={1} align=\"center\">\r\n                                        <HeaderCell>DataTrades Email</HeaderCell>\r\n                                        <Cell>\r\n                                            {(rowData, rowIndex) => {\r\n                                                return <span>{rowData.user.email}</span>\r\n                                            }}\r\n                                        </Cell>\r\n                                    </Column>\r\n                                    <Column minWidth={200} flexGrow={1} align=\"center\">\r\n                                        <HeaderCell>DataTrades Country</HeaderCell>\r\n                                        <Cell>\r\n                                            {(rowData, rowIndex) => {\r\n                                                return <span>{rowData.country.name}</span>\r\n                                            }}\r\n                                        </Cell>\r\n                                    </Column>\r\n                                    <Column minWidth={150}  flexGrow={1} align=\"center\">\r\n                                        <HeaderCell>Iron FX Name</HeaderCell>\r\n                                        <Cell>\r\n                                            {(rowData, rowIndex) => {\r\n                                                return <span>{rowData.ironFxDetail? `${rowData.ironFxDetail.firstName} ${rowData.ironFxDetail.lastName}` : \"-\"}</span>\r\n                                            }}\r\n                                        </Cell>\r\n                                    </Column>\r\n                                    <Column minWidth={150}  flexGrow={1} align=\"center\">\r\n                                        <HeaderCell>Iron FX Email</HeaderCell>\r\n                                        <Cell>\r\n                                            {(rowData, rowIndex) => {\r\n                                                return <span>{rowData.ironFxDetail? `${rowData.ironFxDetail.email}` : \"-\"}</span>\r\n                                            }}\r\n                                        </Cell>\r\n                                    </Column>\r\n                                    <Column minWidth={150}  flexGrow={1} align=\"center\">\r\n                                        <HeaderCell>Iron FX Country</HeaderCell>\r\n                                        <Cell>\r\n                                            {(rowData, rowIndex) => {\r\n                                                return <span>{rowData.ironFxDetail? `${rowData.ironFxDetail.country}` : \"-\"}</span>\r\n                                            }}\r\n                                        </Cell>\r\n                                    </Column>\r\n                                    <Column minWidth={80}  flexGrow={1} align=\"center\">\r\n                                        <HeaderCell>Status</HeaderCell>\r\n                                        <Cell>\r\n                                            {(rowData, rowIndex) => {\r\n                                                return <span>{rowData.user.status}</span>\r\n                                            }}\r\n                                        </Cell>\r\n                                    </Column>\r\n                                    <Column minWidth={80}  flexGrow={1} align=\"center\">\r\n                                        <HeaderCell>Account No</HeaderCell>\r\n                                        <Cell>\r\n                                            {(rowData, rowIndex) => {\r\n                                                return <span>{rowData.vantageFXAccountNumber}</span>\r\n                                            }}\r\n                                        </Cell>\r\n                                    </Column>\r\n                                    <Column minWidth={100}  flexGrow={1} align=\"center\">\r\n                                        <HeaderCell>Created At</HeaderCell>\r\n                                        <Cell>\r\n                                            {(rowData, rowIndex) => {\r\n                                                return <span>{rowData.createdAt}</span>\r\n                                            }}\r\n                                        </Cell>\r\n                                    </Column>\r\n                                    <Column minWidth={150}  flexGrow={1} align=\"center\">\r\n                                        <HeaderCell>Actions</HeaderCell>\r\n                                        <Cell>\r\n                                            {(rowData, rowIndex) => {\r\n                                                return <div>\r\n                                                    <Button color=\"info\" size=\"xs\" className=\"mb-2\" onClick={()=> this.toggle(rowData)}>\r\n                                                        Change Status\r\n                                                    </Button>\r\n                                                </div>\r\n                                            }}\r\n                                        </Cell>\r\n                                    </Column>\r\n                                </ReactTable>\r\n\r\n                                {this.state.selectedUser !== \"\" &&\r\n                                <Modal isOpen={this.state.showStatusModal} toggle={this.toggle}>\r\n                                    <ModalHeader toggle={this.toggle}>\r\n                                        Change Status\r\n                                        {/*<IntlMessages id=\"event.divisions-add-members\" />*/}\r\n                                    </ModalHeader>\r\n                                    <ModalBody>\r\n                                        <FormGroup row>\r\n                                            <Colxx sm=\"12\">\r\n                                                <select\r\n                                                    name=\"select\"\r\n                                                    className=\"form-control\"\r\n                                                    value={this.state.selectedStatus}\r\n                                                    onChange={this.handleSelectTypeChange}\r\n                                                >\r\n                                                    {/*<option value='waiting'>Waiting</option>*/}\r\n                                                    <option value='vip'>Accept</option>\r\n                                                    <option value='registered'>Deny</option>\r\n\r\n                                                </select>\r\n                                            </Colxx>\r\n                                        </FormGroup>\r\n                                    </ModalBody>\r\n                                    <ModalFooter>\r\n                                        <Button color=\"secondary\" onClick={this.toggle}>\r\n                                            Close\r\n                                        </Button>\r\n                                        <Button disabled={this.state.changingStatus}\r\n                                                className={`float-right btn-shadow btn-multiple-state ${this.state.changingStatus ? \"show-spinner\" : \"\"}`}\r\n                                                onClick={this.changeStatus}\r\n                                                color=\"primary\"\r\n                                        >\r\n                                        <span className=\"spinner d-inline-block\">\r\n                                            <span className=\"bounce1\" />\r\n                                            <span className=\"bounce2\" />\r\n                                            <span className=\"bounce3\" />\r\n                                        </span><span className=\"label\">\r\n                                                Change Status</span>\r\n                                        </Button>\r\n                                    </ModalFooter>\r\n                                </Modal>}\r\n\r\n                            </CardBody>\r\n                        </Card>\r\n\r\n                    </Col>\r\n                </Row>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n","import React, {useEffect, useState} from \"react\";\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\nimport { Card, CardBody, CardTitle} from \"reactstrap\";\r\nimport Spinner from \"reactstrap/es/Spinner\";\r\nimport Url from '../../../../config/api';\r\nimport ApiCall from '../../../../config/network';\r\nimport {config} from \"../../../../config/env\";\r\nexport default function Users() {\r\n    const [state, setState] = useState({ loading: true,  users: []})\r\n    useEffect(()=> {\r\n        let isUnmount = false\r\n        // const getUsers =async ()=> {\r\n        //     setState(prevState => ({\r\n        //         ...prevState,\r\n        //         loading: true\r\n        //     }))\r\n        //     let response = await ApiCall.get(Url.ALL_USERS, await config());\r\n        //     if(response.status === 200){\r\n        //         if(!isUnmount){\r\n        //             setState(prevState => ({\r\n        //                 ...prevState,\r\n        //                 users: response.data.users.reverse(),\r\n        //                 loading: false\r\n        //             }))\r\n        //         }\r\n        //\r\n        //     }\r\n        //     // console.log(\"RECENT MISSIONS\",response)\r\n        // };\r\n        // getUsers();\r\n        return ()=> {\r\n            isUnmount = true\r\n        }\r\n    }, []);\r\n    const getUsers =async ()=> {\r\n        setState(prevState => ({\r\n            ...prevState,\r\n            loading: true\r\n        }))\r\n        let response = await ApiCall.get(Url.ALL_USERS, await config());\r\n        if(response.status === 200){\r\n\r\n                setState(prevState => ({\r\n                    ...prevState,\r\n                    users: response.data.users.reverse(),\r\n                    loading: false\r\n                }))\r\n\r\n        }\r\n        // console.log(\"RECENT MISSIONS\",response)\r\n    };\r\n    return (\r\n        <Card>\r\n            <div className=\"position-absolute card-top-buttons\">\r\n                <button className=\"btn btn-header-light icon-button\" onClick={getUsers}>\r\n                    <i className=\"simple-icon-refresh\" />\r\n                </button>\r\n            </div>\r\n            <CardBody className='text-center'>\r\n                <h2>Welcome to Raregistar Admin Dashbord</h2>\r\n                {/*<CardTitle>*/}\r\n                {/*    /!*<IntlMessages id=\"dashboards.recent-orders\" />*!/*/}\r\n                {/*    Users*/}\r\n                {/*</CardTitle>*/}\r\n                {/*<div className=\"dashboard-list-with-user\">*/}\r\n                {/*    <PerfectScrollbar*/}\r\n                {/*        options={{ suppressScrollX: true, wheelPropagation: false }}*/}\r\n                {/*    >*/}\r\n                {/*        {state.loading ?*/}\r\n                {/*            <div className=\"d-flex flex-row mb-3 pb-3 border-bottom\"  style={{justifyContent: 'center', padding: '50px'}}>*/}\r\n                {/*                <h3 className=\"text-center mt-3 mb-3\">*/}\r\n                {/*                    <Spinner/>*/}\r\n                {/*                    <br/>*/}\r\n                {/*                    Loading*/}\r\n                {/*                </h3>*/}\r\n                {/*            </div> :*/}\r\n                {/*            state.users.length > 0 ?*/}\r\n                {/*                state.users.map((item, index) => {*/}\r\n                {/*                    return (*/}\r\n                {/*                        <div key={index}*/}\r\n                {/*                             className=\"d-flex flex-row mb-3 pb-3 border-bottom\">*/}\r\n                {/*                                <img*/}\r\n                {/*                                    src={item.image === null? '/assets/img/user-image.png': item.image}*/}\r\n                {/*                                    alt={'notes'}*/}\r\n                {/*                                    className=\"list-thumbnail border-0 list-thumbnail align-self-center xsmall\"*/}\r\n                {/*                                    ref={(node) => {*/}\r\n                {/*                                        if (node) {*/}\r\n                {/*                                            node.style.setProperty('width', '50px', \"important\");*/}\r\n                {/*                                        }*/}\r\n                {/*                                    }}*/}\r\n                {/*                                    style={{*/}\r\n                {/*                                        borderRadius: '50%',*/}\r\n                {/*                                        height: '50px',*/}\r\n                {/*                                    }}*/}\r\n                {/*                                />*/}\r\n                {/*                            <div className=\"pl-3 pr-2\">*/}\r\n                {/*                                    <p className=\"font-weight-medium mb-0\">{item.name}</p>*/}\r\n                {/*                                    <p className=\"text-muted mb-0 text-small\">*/}\r\n                {/*                                        {item.email}*/}\r\n                {/*                                    </p>*/}\r\n                {/*                            </div>*/}\r\n                {/*                        </div>*/}\r\n                {/*                    );*/}\r\n                {/*                })*/}\r\n                {/*                : <div className=\"d-flex flex-row mb-3 pb-3 border-bottom\"  style={{justifyContent: 'center', padding: '50px'}}>*/}\r\n                {/*                    <h2 className=\"text-center mt-3 mb-3\">*/}\r\n                {/*                        <i className=\"simple-icon-notebook\" aria-hidden=\"true\" style={{fontSize: '2em'}}/>*/}\r\n                {/*                        <br/>*/}\r\n                {/*                        No User Created Yet!*/}\r\n                {/*                    </h2>*/}\r\n                {/*                </div>}*/}\r\n                {/*    </PerfectScrollbar>*/}\r\n                {/*</div>*/}\r\n            </CardBody>\r\n        </Card>\r\n    );\r\n}\r\n","import React, { Component, Fragment } from 'react';\r\nimport { injectIntl } from 'react-intl';\r\nimport { Row } from 'reactstrap';\r\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\r\nimport Breadcrumb from '../../../containers/navs/Breadcrumb';\r\nimport RecentSignals from \"./comonents/recent-signals\";\r\n\r\n\r\nclass DefaultDashboard extends Component {\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <Row>\r\n                    <Colxx xxs=\"12\">\r\n                        <Breadcrumb heading=\"menu.dashboard\" match={this.props.match} />\r\n                        <Separator className=\"mb-5\" />\r\n                    </Colxx>\r\n                </Row>\r\n                <Row>\r\n                    <Colxx lg=\"12\" xl=\"6\" className=\"mb-4\">\r\n                        <RecentSignals />\r\n                    </Colxx>\r\n                </Row>\r\n\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\nexport default injectIntl(DefaultDashboard);\r\n"],"sourceRoot":""}