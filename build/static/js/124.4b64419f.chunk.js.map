{"version":3,"sources":["views/app/settings/email-templates.js","../node_modules/reactstrap/es/Form.js","../node_modules/reactstrap/es/Label.js"],"names":["quillModules","toolbar","list","indent","quillFormats","initialState","dataTradesRegister","dataTradesRegisterId","ironFxRegisterId","vipMemberId","ironFxRegister","vipMember","loading","spinning","EmailTemplates","props","getEmailTemplates","a","setState","ApiCall","Url","GET_TEMPLATES","config","get","response","status","data","mailingTemplates","datatrades_register","value","id","ironfx_register","vip_member","updateEmailTemplates","e","preventDefault","state","validation","handleValidation","UPDATE_TEMPLATE","post","NotificationManager","success","error","message","handleInputChange","target","name","dataTradesRegisterValidation","ironFxRegisterValidation","vipMemberValidation","dataTradesRegisterChange","ironFxRegisterChange","vipMemberChange","this","xxs","heading","match","className","onSubmit","row","sm","to","size","type","color","style","theme","onChange","modules","formats","Component","propTypes","children","PropTypes","node","inline","bool","tag","tagPropType","innerRef","oneOfType","object","func","string","cssModule","Form","_Component","_this","call","getRef","bind","_assertThisInitialized","submit","_inheritsLoose","_proto","prototype","ref","render","_this$props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","defaultProps","stringOrNumberProp","number","columnProps","shape","order","offset","hidden","check","for","xs","md","lg","xl","widths","array","getColumnSizeClass","isXs","colWidth","colSize","Label","htmlFor","colClasses","forEach","i","columnProp","colClass","isObject","_classNames","colSizeInterfix","push","length"],"mappings":"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","file":"static/js/124.4b64419f.chunk.js","sourcesContent":["import React, {Component, Fragment} from \"react\";\r\nimport {Button, Card, CardBody, CardTitle, Col, Form, FormGroup, Label, Row} from \"reactstrap\";\r\n\r\nimport IntlMessages from \"../../../helpers/IntlMessages\";\r\nimport {Colxx, Separator} from \"../../../components/common/CustomBootstrap\";\r\nimport Breadcrumb from \"../../../containers/navs/Breadcrumb\";\r\nimport ApiCall from '../../../config/network';\r\nimport Url from '../../../config/api';\r\nimport {NotificationManager} from \"../../../components/common/react-notifications\";\r\nimport {config} from \"../../../config/env\";\r\nimport ReactQuill from \"react-quill\";\r\nimport \"react-quill/dist/quill.snow.css\";\r\nimport 'react-quill/dist/quill.bubble.css';\r\nimport {Link} from \"react-router-dom\";\r\n// import {Link} from \"react-router-dom\";\r\n\r\n\r\nconst quillModules = {\r\n    toolbar: [\r\n        [\"bold\", \"italic\", \"underline\", \"strike\", \"blockquote\"],\r\n        [\r\n            {list: \"ordered\"},\r\n            {list: \"bullet\"},\r\n            {indent: \"-1\"},\r\n            {indent: \"+1\"}\r\n        ],\r\n        [\"link\", \"image\"],\r\n        [\"clean\"]\r\n    ]\r\n};\r\nconst quillFormats = [\r\n    \"header\",\r\n    \"bold\",\r\n    \"italic\",\r\n    \"underline\",\r\n    \"strike\",\r\n    \"blockquote\",\r\n    \"list\",\r\n    \"bullet\",\r\n    \"indent\",\r\n    \"link\",\r\n    \"image\"\r\n];\r\nconst initialState = {\r\n    dataTradesRegister: '',\r\n    dataTradesRegisterId: null,\r\n    ironFxRegisterId: null,\r\n    vipMemberId: null,\r\n    ironFxRegister: '',\r\n    vipMember: '',\r\n    loading: false,\r\n    spinning: true,\r\n\r\n}\r\nexport default class EmailTemplates extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = initialState;\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.getEmailTemplates();\r\n    }\r\n\r\n    getEmailTemplates = async () => {\r\n        this.setState({\r\n            spinning: true,\r\n        })\r\n        let response = await ApiCall.get(Url.GET_TEMPLATES, await config());\r\n        if (response.status === 200) {\r\n            this.setState({\r\n                dataTradesRegister: response.data.mailingTemplates ?\r\n                    response.data.mailingTemplates.datatrades_register.value : \"\",\r\n                dataTradesRegisterId: response.data.mailingTemplates ?\r\n                    response.data.mailingTemplates.datatrades_register.id : null,\r\n                ironFxRegister: response.data.mailingTemplates ?\r\n                    response.data.mailingTemplates.ironfx_register.value : \"\",\r\n                ironFxRegisterId: response.data.mailingTemplates ?\r\n                    response.data.mailingTemplates.ironfx_register.id : null,\r\n                vipMember: response.data.mailingTemplates ?\r\n                    response.data.mailingTemplates.vip_member.value : \"\",\r\n                vipMemberId: response.data.mailingTemplates ?\r\n                    response.data.mailingTemplates.vip_member.id : null,\r\n                spinning: false\r\n            })\r\n        }\r\n    };\r\n    updateEmailTemplates = async (e) => {\r\n        e.preventDefault();\r\n        const {\r\n            dataTradesRegister,\r\n            ironFxRegister,\r\n            vipMember\r\n        } = this.state;\r\n        let validation = this.handleValidation();\r\n        if (validation.status) {\r\n            this.setState({loading: true});\r\n            let response = await ApiCall.post(Url.UPDATE_TEMPLATE, {\r\n                datatrades_register: dataTradesRegister,\r\n                ironfx_register: ironFxRegister,\r\n                vip_member: vipMember\r\n            }, await config());\r\n            if (response.status === 200) {\r\n                this.getEmailTemplates();\r\n                this.setState({loading: false});\r\n                return NotificationManager.success(\r\n                    \"Templates Updated Successfully\",\r\n                    \"Success\",\r\n                    3000,\r\n                    null,\r\n                    null,\r\n                    'filled'\r\n                );\r\n            } else {\r\n                this.setState({loading: false});\r\n            }\r\n        } else {\r\n            return NotificationManager.error(\r\n                validation.message,\r\n                \"Error\",\r\n                3000,\r\n                null,\r\n                null,\r\n                'filled'\r\n            );\r\n        }\r\n\r\n        // console.log(response)\r\n\r\n    };\r\n    handleInputChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        });\r\n    };\r\n\r\n\r\n    handleValidation = () => {\r\n        const {\r\n            dataTradesRegister,\r\n            ironFxRegister,\r\n            vipMember\r\n        } = this.state;\r\n        let dataTradesRegisterValidation = {\r\n            message: 'Please Provide Data Trades Registration Template Content',\r\n            status: false\r\n        };\r\n        let ironFxRegisterValidation = {\r\n            message: 'Please Provide Iron Fx Register Template Content',\r\n            status: false\r\n        };\r\n        let vipMemberValidation = {\r\n            message: 'Please Provide VIP Member Template Content',\r\n            status: false\r\n        };\r\n        let passed = {\r\n            status: true\r\n        };\r\n        return dataTradesRegister !== \"\" ?\r\n            dataTradesRegister === \"<p><br></p>\" ? dataTradesRegisterValidation :\r\n                ironFxRegister === \"\" ? ironFxRegisterValidation :\r\n                    ironFxRegister === \"<p><br></p>\" ? ironFxRegisterValidation :\r\n                        vipMember === \"\" ? vipMemberValidation :\r\n                            vipMember === \"<p><br></p>\" ? vipMemberValidation :\r\n                                passed\r\n            : dataTradesRegisterValidation\r\n\r\n    };\r\n\r\n    dataTradesRegisterChange = (dataTradesRegister) => {\r\n        this.setState({dataTradesRegister});\r\n    };\r\n    ironFxRegisterChange = (ironFxRegister) => {\r\n        this.setState({ironFxRegister});\r\n    };\r\n    vipMemberChange = (vipMember) => {\r\n        this.setState({vipMember});\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            dataTradesRegister,\r\n            ironFxRegister,\r\n            vipMember,\r\n            dataTradesRegisterId,\r\n            ironFxRegisterId,\r\n            vipMemberId,\r\n            spinning\r\n        } = this.state;\r\n        return (\r\n            <Fragment>\r\n                <Row>\r\n                    <Colxx xxs=\"12\">\r\n                        <Breadcrumb heading=\"menu.email-template\" match={this.props.match}/>\r\n                        <Separator className=\"mb-5\"/>\r\n                    </Colxx>\r\n                </Row>\r\n                {spinning ? <div className=\"loading\"/> :\r\n                    <Row>\r\n                        <Col xxs=\"12\">\r\n                            <div className='col-sm-12 col-lg-12 col-xs-12 '>\r\n                                <Card>\r\n                                    <div className=\"position-absolute card-top-buttons\">\r\n                                    </div>\r\n                                    <CardBody>\r\n                                        <CardTitle>\r\n                                            Email Templates\r\n                                        </CardTitle>\r\n                                        <Form className=\"dashboard-quick-post\" onSubmit={this.updateEmailTemplates}>\r\n                                            <FormGroup row>\r\n                                                <Label sm=\"3\">\r\n                                                    Data Trades Register {\" | \"}\r\n                                                    <Link\r\n                                                        to={`/app/settings/email-templates/translations/${dataTradesRegisterId}`}>\r\n                                                        <Button size='xs' type=\"button\"\r\n                                                                color='primary'\r\n                                                                style={{color: 'white'}}\r\n                                                        >\r\n                                                            Translation\r\n                                                        </Button>\r\n                                                    </Link>\r\n                                                </Label>\r\n                                                <Colxx sm=\"12\">\r\n                                                    <ReactQuill\r\n                                                        theme=\"snow\"\r\n                                                        value={dataTradesRegister}\r\n                                                        onChange={this.dataTradesRegisterChange}\r\n                                                        modules={quillModules}\r\n                                                        formats={quillFormats}/>\r\n                                                </Colxx>\r\n                                            </FormGroup>\r\n                                            <FormGroup row>\r\n                                                <Label sm=\"3\">\r\n                                                    IronFx Register {\" | \"}\r\n                                                    <Link\r\n                                                        to={`/app/settings/email-templates/translations/${ironFxRegisterId}`}>\r\n                                                        <Button size='xs' type=\"button\"\r\n                                                                color='primary'\r\n                                                                style={{color: 'white'}}\r\n                                                        >\r\n                                                        Translation\r\n                                                        </Button>\r\n                                                    </Link>\r\n\r\n\r\n                                                </Label>\r\n                                                <Colxx sm=\"12\">\r\n                                                    <ReactQuill\r\n                                                        theme=\"snow\"\r\n                                                        value={ironFxRegister}\r\n                                                        onChange={this.ironFxRegisterChange}\r\n                                                        modules={quillModules}\r\n                                                        formats={quillFormats}/>\r\n                                                </Colxx>\r\n                                            </FormGroup>\r\n                                            <FormGroup row>\r\n                                                <Label sm=\"3\">\r\n                                                    VIP Member {\" | \"}\r\n                                                    <Link\r\n                                                        to={`/app/settings/email-templates/translations/${vipMemberId}`}>\r\n                                                        <Button size='xs' type=\"button\"\r\n                                                                color='primary'\r\n                                                                style={{color: 'white'}}\r\n                                                        >\r\n                                                            Translation\r\n                                                        </Button>\r\n                                                    </Link>\r\n\r\n                                                </Label>\r\n                                                <Colxx sm=\"12\">\r\n                                                    <ReactQuill\r\n                                                        theme=\"snow\"\r\n                                                        value={vipMember}\r\n                                                        onChange={this.vipMemberChange}\r\n                                                        modules={quillModules}\r\n                                                        formats={quillFormats}/>\r\n                                                </Colxx>\r\n                                            </FormGroup>\r\n                                            <Button className={`float-right btn-shadow btn-multiple-state \r\n                                        ${this.state.loading ? \"show-spinner\" : \"\"}`}\r\n                                                    color=\"primary\"\r\n                                            >\r\n                                        <span className=\"spinner d-inline-block\">\r\n                                        <span className=\"bounce1\"/>\r\n                                        <span className=\"bounce2\"/>\r\n                                        <span className=\"bounce3\"/>\r\n                                        </span>\r\n                                                <span className=\"label\"><IntlMessages id=\"save\"/></span>\r\n                                            </Button>\r\n                                        </Form>\r\n\r\n                                    </CardBody>\r\n                                </Card>\r\n                            </div>\r\n                        </Col>\r\n\r\n                    </Row>}\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  inline: PropTypes.bool,\n  tag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string]),\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'form'\n};\n\nvar Form =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Form, _Component);\n\n  function Form(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n    _this.getRef = _this.getRef.bind(_assertThisInitialized(_this));\n    _this.submit = _this.submit.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  var _proto = Form.prototype;\n\n  _proto.getRef = function getRef(ref) {\n    if (this.props.innerRef) {\n      this.props.innerRef(ref);\n    }\n\n    this.ref = ref;\n  };\n\n  _proto.submit = function submit() {\n    if (this.ref) {\n      this.ref.submit();\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        className = _this$props.className,\n        cssModule = _this$props.cssModule,\n        inline = _this$props.inline,\n        Tag = _this$props.tag,\n        innerRef = _this$props.innerRef,\n        attributes = _objectWithoutPropertiesLoose(_this$props, [\"className\", \"cssModule\", \"inline\", \"tag\", \"innerRef\"]);\n\n    var classes = mapToCssModules(classNames(className, inline ? 'form-inline' : false), cssModule);\n    return React.createElement(Tag, _extends({}, attributes, {\n      ref: innerRef,\n      className: classes\n    }));\n  };\n\n  return Form;\n}(Component);\n\nForm.propTypes = propTypes;\nForm.defaultProps = defaultProps;\nexport default Form;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType, isObject } from './utils';\nvar colWidths = ['xs', 'sm', 'md', 'lg', 'xl'];\nvar stringOrNumberProp = PropTypes.oneOfType([PropTypes.number, PropTypes.string]);\nvar columnProps = PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.shape({\n  size: stringOrNumberProp,\n  order: stringOrNumberProp,\n  offset: stringOrNumberProp\n})]);\nvar propTypes = {\n  children: PropTypes.node,\n  hidden: PropTypes.bool,\n  check: PropTypes.bool,\n  size: PropTypes.string,\n  for: PropTypes.string,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  xs: columnProps,\n  sm: columnProps,\n  md: columnProps,\n  lg: columnProps,\n  xl: columnProps,\n  widths: PropTypes.array\n};\nvar defaultProps = {\n  tag: 'label',\n  widths: colWidths\n};\n\nvar getColumnSizeClass = function getColumnSizeClass(isXs, colWidth, colSize) {\n  if (colSize === true || colSize === '') {\n    return isXs ? 'col' : \"col-\" + colWidth;\n  } else if (colSize === 'auto') {\n    return isXs ? 'col-auto' : \"col-\" + colWidth + \"-auto\";\n  }\n\n  return isXs ? \"col-\" + colSize : \"col-\" + colWidth + \"-\" + colSize;\n};\n\nvar Label = function Label(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      hidden = props.hidden,\n      widths = props.widths,\n      Tag = props.tag,\n      check = props.check,\n      size = props.size,\n      htmlFor = props.for,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"hidden\", \"widths\", \"tag\", \"check\", \"size\", \"for\"]);\n\n  var colClasses = [];\n  widths.forEach(function (colWidth, i) {\n    var columnProp = props[colWidth];\n    delete attributes[colWidth];\n\n    if (!columnProp && columnProp !== '') {\n      return;\n    }\n\n    var isXs = !i;\n    var colClass;\n\n    if (isObject(columnProp)) {\n      var _classNames;\n\n      var colSizeInterfix = isXs ? '-' : \"-\" + colWidth + \"-\";\n      colClass = getColumnSizeClass(isXs, colWidth, columnProp.size);\n      colClasses.push(mapToCssModules(classNames((_classNames = {}, _classNames[colClass] = columnProp.size || columnProp.size === '', _classNames[\"order\" + colSizeInterfix + columnProp.order] = columnProp.order || columnProp.order === 0, _classNames[\"offset\" + colSizeInterfix + columnProp.offset] = columnProp.offset || columnProp.offset === 0, _classNames))), cssModule);\n    } else {\n      colClass = getColumnSizeClass(isXs, colWidth, columnProp);\n      colClasses.push(colClass);\n    }\n  });\n  var classes = mapToCssModules(classNames(className, hidden ? 'sr-only' : false, check ? 'form-check-label' : false, size ? \"col-form-label-\" + size : false, colClasses, colClasses.length ? 'col-form-label' : false), cssModule);\n  return React.createElement(Tag, _extends({\n    htmlFor: htmlFor\n  }, attributes, {\n    className: classes\n  }));\n};\n\nLabel.propTypes = propTypes;\nLabel.defaultProps = defaultProps;\nexport default Label;"],"sourceRoot":""}