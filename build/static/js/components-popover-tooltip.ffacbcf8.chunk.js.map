{"version":3,"sources":["containers/navs/Breadcrumb.js","components/common/PopoverItem.js","components/common/TooltipItem.js","views/app/ui/components/popover-tooltip.js"],"names":["getMenuTitle","sub","id","getUrl","path","index","split","BreadcrumbItems","match","substr","paths","length","indexOf","filter","x","className","map","key","active","to","BreadcrumbContainer","heading","PopoverItem","props","toggle","setState","prevState","popoverOpen","state","Button","color","this","onClick","item","text","Popover","placement","isOpen","target","PopoverBody","body","React","Component","TooltipItem","tooltipOpen","Tooltip","PopoverTooltipUi","popovers","tooltips","Row","xxs","Breadcrumb","Card","CardBody","CardTitle","IntlMessages","popover","i","tooltip"],"mappings":"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","file":"static/js/components-popover-tooltip.ffacbcf8.chunk.js","sourcesContent":["import React, { Fragment } from \"react\";\r\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport IntlMessages from \"../../helpers/IntlMessages\";\r\n\r\nconst getMenuTitle = sub => {\r\n  return <IntlMessages id={`menu.${sub}`} />;\r\n};\r\n\r\nconst getUrl = (path, sub, index) => {\r\n  if (index === 0) {\r\n    return \"\";\r\n  } else {\r\n    return path.split(sub)[0] + sub;\r\n  }\r\n};\r\n\r\nconst BreadcrumbContainer = ({ heading, match }) => {\r\n  return (\r\n    <Fragment>\r\n      {heading && <h1><IntlMessages id={heading}/></h1>}\r\n      <BreadcrumbItems match={match} />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport const BreadcrumbItems = ({ match }) => {\r\n  const path = match.path.substr(1);\r\n  let paths = path.split(\"/\");\r\n  if (paths[paths.length - 1].indexOf(\":\") > -1) {\r\n    paths = paths.filter(x => x.indexOf(\":\") === -1);\r\n  }\r\n  return (\r\n    <Fragment>\r\n      <Breadcrumb className=\"pt-0 breadcrumb-container d-none d-sm-block d-lg-inline-block\">\r\n        {paths.map((sub, index) => {\r\n          return (\r\n            <BreadcrumbItem key={index} active={paths.length === index + 1}>\r\n              {paths.length !== index + 1 ? (\r\n                <NavLink to={\"/\" + getUrl(path, sub, index)}>\r\n                  {getMenuTitle(sub)}\r\n                </NavLink>\r\n              ) : (\r\n                getMenuTitle(sub)\r\n              )}\r\n            </BreadcrumbItem>\r\n          );\r\n        })}\r\n      </Breadcrumb>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default BreadcrumbContainer;\r\n","import React from \"react\";\r\nimport { Button, Popover, PopoverBody } from \"reactstrap\";\r\n\r\nexport class PopoverItem extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      popoverOpen: false\r\n    };\r\n  }\r\n\r\n  toggle = () => {\r\n    this.setState(prevState => ({\r\n      popoverOpen: !prevState.popoverOpen\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <span>\r\n        <Button\r\n          className=\"mr-1 mb-2\"\r\n          color=\"secondary\"\r\n          id={\"Popover-\" + this.props.id}\r\n          onClick={this.toggle}\r\n        >\r\n          {this.props.item.text}\r\n        </Button>\r\n        <Popover\r\n          placement={this.props.item.placement}\r\n          isOpen={this.state.popoverOpen}\r\n          target={\"Popover-\" + this.props.id}\r\n          toggle={this.toggle}\r\n        >\r\n          <PopoverBody>{this.props.item.body}</PopoverBody>\r\n        </Popover>\r\n      </span>\r\n    );\r\n  }\r\n}\r\nexport default PopoverItem;\r\n","import React from \"react\";\r\nimport { Button, Tooltip } from \"reactstrap\";\r\n\r\nclass TooltipItem extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      tooltipOpen: false\r\n    };\r\n  }\r\n  toggle = () => {\r\n    this.setState(prevState => ({\r\n      tooltipOpen: !prevState.tooltipOpen\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <span>\r\n        <Button\r\n          className=\"mr-1 mb-2\"\r\n          color=\"secondary\"\r\n          id={\"Tooltip-\" + this.props.id}\r\n        >\r\n          {this.props.item.text}\r\n        </Button>\r\n        <Tooltip\r\n          placement={this.props.item.placement}\r\n          isOpen={this.state.tooltipOpen}\r\n          target={\"Tooltip-\" + this.props.id}\r\n          toggle={this.toggle}\r\n        >\r\n          {this.props.item.body}\r\n        </Tooltip>\r\n      </span>\r\n    );\r\n  }\r\n}\r\nexport default TooltipItem;\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { Row, Card, CardBody, CardTitle } from \"reactstrap\";\r\nimport IntlMessages from \"../../../../helpers/IntlMessages\";\r\nimport { Colxx, Separator } from \"../../../../components/common/CustomBootstrap\";\r\nimport Breadcrumb from \"../../../../containers/navs/Breadcrumb\";\r\nimport PopoverItem from \"../../../../components/common/PopoverItem\";\r\nimport TooltipItem from \"../../../../components/common/TooltipItem\";\r\n\r\nexport default class PopoverTooltipUi extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      popovers: [\r\n        {\r\n          placement: \"top\",\r\n          text: \"Popover on top\",\r\n          body: \"Augue laoreet rutrum faucibus vivamus sagittis lacus vel .\"\r\n        },\r\n        {\r\n          placement: \"bottom\",\r\n          text: \"Popover on bottom\",\r\n          body: \"Vel augue laoreet rutrum Vivamus sagittis lacus faucibus.\"\r\n        },\r\n        {\r\n          placement: \"left\",\r\n          text: \"Popover on left\",\r\n          body: \"Lacus vel augue Vivamus sagittis laoreet rutrum faucibus.\"\r\n        },\r\n        {\r\n          placement: \"right\",\r\n          text: \"Popover on right\",\r\n          body: \"Laoreet rutrum faucibus vivamus sagittis lacus vel augue.\"\r\n        }\r\n      ],\r\n\r\n      tooltips: [\r\n        {\r\n          placement: \"top\",\r\n          text: \"Tooltip on top\",\r\n          body: \"Vivamus sagittis lacus\"\r\n        },\r\n        {\r\n          placement: \"bottom\",\r\n          text: \"Tooltip on bottom\",\r\n          body: \"Lacus vel augue\"\r\n        },\r\n        {\r\n          placement: \"left\",\r\n          text: \"Tooltip on left\",\r\n          body: \"Laoreet rutrum faucibus\"\r\n        },\r\n        {\r\n          placement: \"right\",\r\n          text: \"Tooltip on right\",\r\n          body: \"Augue rutrum vel\"\r\n        }\r\n      ]\r\n    };\r\n  }\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <Row>\r\n          <Colxx xxs=\"12\">\r\n            <Breadcrumb\r\n              heading=\"menu.popover-tooltip\"\r\n              match={this.props.match}\r\n            />\r\n            <Separator className=\"mb-5\" />\r\n          </Colxx>\r\n        </Row>\r\n        <Row>\r\n          <Colxx xxs=\"12\">\r\n            <Card className=\"mb-4\">\r\n              <CardBody>\r\n                <CardTitle>\r\n                  <IntlMessages id=\"popover-tooltip.popover\" />\r\n                </CardTitle>\r\n\r\n                {this.state.popovers.map((popover, i) => {\r\n                  return <PopoverItem key={i} item={popover} id={i} />;\r\n                })}\r\n              </CardBody>\r\n            </Card>\r\n          </Colxx>\r\n        </Row>\r\n\r\n        <Row>\r\n          <Colxx xxs=\"12\">\r\n            <Card className=\"mb-4\">\r\n              <CardBody>\r\n                <CardTitle>\r\n                  <IntlMessages id=\"popover-tooltip.tooltip\" />\r\n                </CardTitle>\r\n\r\n                {this.state.tooltips.map((tooltip, i) => {\r\n                  return <TooltipItem key={i} item={tooltip} id={i} />;\r\n                })}\r\n              </CardBody>\r\n            </Card>\r\n          </Colxx>\r\n        </Row>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":""}