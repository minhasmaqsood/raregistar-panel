{"version":3,"sources":["views/app/result/view.js","../node_modules/react-confirm-alert/lib/index.js"],"names":["Column","Table","HeaderCell","Cell","Pagination","ResultView","getAllResults","a","setState","spinning","_isMounted","ApiCall","Url","RESULTS","config","get","response","status","results","data","reverse","changeStatus","item","confirmAlert","title","message","buttons","label","onClick","confirmChangeStatus","RESULT_DELETE","id","post","NotificationManager","success","handleChangePage","dataKey","page","handleChangeLength","displayLength","getData","state","filter","v","i","start","selectAll","checked","this","xxs","className","to","size","color","heading","match","props","autoHeight","bordered","cellBordered","virtualized","hover","loading","width","fixed","align","rowData","rowIndex","minWidth","flexGrow","sub_heading","total","style","lengthMenu","value","activePage","length","onChangePage","onChangeLength","Component","Object","defineProperty","exports","default","undefined","_class","_temp2","_createClass","defineProperties","target","descriptor","enumerable","configurable","writable","key","Constructor","protoProps","staticProps","prototype","properties","document","body","classList","add","getElementById","svgNS","feGaussianBlur","createElementNS","setAttribute","appendChild","svgElem","createSVGBlurReconfirm","divTarget","children","createElement","_reactDom","render","_react2","ReactConfirmAlert","createElementReconfirm","_react","require","_interopRequireDefault","_propTypes2","obj","__esModule","_classCallCheck","instance","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_Component","_ref","_temp","_this","_len","arguments","args","Array","_key","__proto__","getPrototypeOf","apply","concat","handleClickButton","button","close","handleClickOverlay","e","_this$props","closeOnClickOutside","onClickOutside","isClickOutside","overlay","afterClose","removeBodyClass","removeElementReconfirm","removeSVGBlurReconfirm","keyboardClose","event","_this$props2","closeOnEscape","onKeypressEscape","isKeyCodeEscape","keyCode","componentDidMount","addEventListener","componentWillUnmount","removeEventListener","willUnmount","renderCustomUI","_this$props3","customUI","onClose","subClass","superClass","create","constructor","setPrototypeOf","_inherits","_this2","_props","childrenElement","ref","dom","map","propTypes","string","array","isRequired","func","bool","defaultProps","svg","parentNode","removeChild","remove","unmountComponentAtNode"],"mappings":"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","file":"static/js/126.8992cfb7.chunk.js","sourcesContent":["import React, { Component, Fragment } from \"react\";\r\nimport {Row, Col, CardBody, CardTitle, Card, Button,} from \"reactstrap\";\r\nimport IntlMessages from \"../../../helpers/IntlMessages\";\r\nimport { Colxx, Separator } from \"../../../components/common/CustomBootstrap\";\r\nimport Breadcrumb from \"../../../containers/navs/Breadcrumb\";\r\nimport ApiCall from '../../../config/network';\r\nimport Url from '../../../config/api';\r\nimport { NotificationManager } from \"../../../components/common/react-notifications\";\r\nimport {config} from \"../../../config/env\";\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport {Link} from \"react-router-dom\";\r\nimport {Table} from \"rsuite\";\r\nimport '../table.css';\r\nconst { Column, HeaderCell, Cell, Pagination } = Table;\r\nexport default class ResultView extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            selectAll: false,\r\n            results: [],\r\n            checked: [],\r\n            spinning: false,\r\n            //Pagination\r\n            displayLength: 10,\r\n            page: 1\r\n        };\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this._isMounted = false\r\n        this.getAllResults();\r\n    };\r\n    getAllResults = async ()=> {\r\n        this.setState({spinning: true});\r\n        if(!this._isMounted){\r\n            let response = await ApiCall.get(Url.RESULTS, await config())\r\n            if(response.status=== 200){\r\n                this.setState({results: response.data.results.reverse(), spinning: false});\r\n            }\r\n        }\r\n\r\n    };\r\n    componentWillUnmount() {\r\n        this._isMounted = true\r\n    }\r\n\r\n    changeStatus  =  (item) => {\r\n        confirmAlert({\r\n            title: 'Confirmation!',\r\n            message: 'Are you sure you want to Delete?',\r\n            buttons: [\r\n                {\r\n                    label: 'Yes',\r\n                    onClick: () => this.confirmChangeStatus(item)\r\n                },\r\n                {\r\n                    label: \"No\"\r\n                }\r\n            ]\r\n        })\r\n    };\r\n\r\n\r\n    confirmChangeStatus = async (item) => {\r\n        this.setState({spinning: true});\r\n        let response = await ApiCall.post(Url.RESULT_DELETE, {\r\n            id: item.id,\r\n        }, await config());\r\n        if(response.status === 200){\r\n            this.setState({spinning: false});\r\n            this.getAllResults();\r\n            return  NotificationManager.success(\r\n                \"Result deleted Successfully\",\r\n                \"Success\",\r\n                3000,\r\n                null,\r\n                null,\r\n                'filled'\r\n            );\r\n        }\r\n\r\n    };\r\n    handleChangePage=(dataKey)=> {\r\n        // console.log(dataKey)\r\n        this.setState({\r\n            page: dataKey\r\n        });\r\n    };\r\n    handleChangeLength=(dataKey)=> {\r\n        this.setState({\r\n            page: 1,\r\n            displayLength: dataKey\r\n        });\r\n    };\r\n    getData =() => {\r\n        const { displayLength, page } = this.state;\r\n        return this.state.results.filter((v, i) => {\r\n            const start = displayLength * (page - 1);\r\n            const end = start + displayLength;\r\n            return i >= start && i < end;\r\n        });\r\n    };\r\n    render() {\r\n        const data = this.getData();\r\n        return (\r\n            <Fragment>\r\n                <Row>\r\n                    <Colxx xxs=\"12\">\r\n\r\n                        <div className=\"text-zero top-right-button-container\">\r\n                            <Link to='/app/results/create'><Button size='lg' color={'secondary'}><IntlMessages id={\"menu.create\"} /></Button></Link>\r\n                        </div>\r\n                        <Breadcrumb heading=\"faq.view\" match={this.props.match} />\r\n                        <Separator className=\"mb-5\" />\r\n                    </Colxx>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <Card className=\"h-100\">\r\n                            <CardBody>\r\n                                <CardTitle>\r\n                                    <IntlMessages id={\"results\"} />\r\n                                </CardTitle>\r\n                                <Table autoHeight={true}\r\n                                       data={data}\r\n                                       bordered\r\n                                       cellBordered\r\n                                       virtualized={false}\r\n                                       hover={true}\r\n                                       loading={this.state.spinning}>\r\n                                    <Column width={50} fixed align=\"center\">\r\n                                        <HeaderCell>No</HeaderCell>\r\n                                        <Cell>\r\n                                            {(rowData, rowIndex) => {\r\n                                                return <span>{rowIndex +1}</span>\r\n                                            }}\r\n                                        </Cell>\r\n                                    </Column>\r\n\r\n                                    <Column minWidth={200}  flexGrow={1} align=\"center\">\r\n                                        <HeaderCell>Heading</HeaderCell>\r\n                                        <Cell>\r\n                                            {(rowData, rowIndex) => {\r\n                                                return <span>{rowData.heading}</span>\r\n                                            }}\r\n                                        </Cell>\r\n                                    </Column>\r\n                                    <Column minWidth={200}  flexGrow={1} align=\"center\">\r\n                                        <HeaderCell>Sub Title</HeaderCell>\r\n                                        <Cell>\r\n                                            {(rowData, rowIndex) => {\r\n                                                return <span>{rowData.sub_heading}</span>\r\n                                            }}\r\n                                        </Cell>\r\n                                    </Column>\r\n                                    <Column minWidth={200}  flexGrow={1} align=\"center\">\r\n                                        <HeaderCell>Total</HeaderCell>\r\n                                        <Cell>\r\n                                            {(rowData, rowIndex) => {\r\n                                                return <span>{rowData.total}</span>\r\n                                            }}\r\n                                        </Cell>\r\n                                    </Column>\r\n                                    {/*<Column minWidth={200}  flexGrow={1} align=\"center\">*/}\r\n                                    {/*    <HeaderCell>Total</HeaderCell>*/}\r\n                                    {/*    <Cell>*/}\r\n                                    {/*        {(rowData, rowIndex) => {*/}\r\n                                    {/*            return <Badge color={rowData.isActive === 0 ?'danger': 'success'}>{rowData.isActive === 0? \"Inactive\": \"Active\"}</Badge>*/}\r\n                                    {/*        }}*/}\r\n                                    {/*    </Cell>*/}\r\n                                    {/*</Column>*/}\r\n                                    <Column minWidth={200}  flexGrow={1} align=\"center\">\r\n                                        <HeaderCell>Actions</HeaderCell>\r\n                                        <Cell>\r\n                                            {(rowData, rowIndex) => {\r\n                                                return <div>\r\n                                                    <Button color=\"secondary\" size=\"xs\" className=\"mb-2\">\r\n                                                        <Link to={`/app/results/edit/${rowData.id}`} style={{color: 'white'}}><IntlMessages id=\"edit\" /></Link>\r\n                                                    </Button>\r\n                                                    {\" \"}{\" \"}\r\n                                                    <Button color=\"danger\" size=\"xs\" className=\"mb-2\" onClick={()=> this.changeStatus(rowData)}>\r\n                                                        <IntlMessages id=\"delete\" />\r\n                                                    </Button>\r\n                                                    {\" \"}{\" \"}\r\n                                                    <Button color=\"info\" size=\"xs\" className=\"mb-2\">\r\n                                                        <Link to={`/app/results/translations/${rowData.id}`} style={{color: 'white'}}>Translation</Link>\r\n                                                    </Button>\r\n                                                </div>\r\n                                            }}\r\n                                        </Cell>\r\n                                    </Column>\r\n                                </Table>\r\n                                <Pagination\r\n                                    lengthMenu={[\r\n                                        {\r\n                                            value: 10,\r\n                                            label: 10\r\n                                        },\r\n                                        {\r\n                                            value: 20,\r\n                                            label: 20\r\n                                        }\r\n                                    ]}\r\n                                    activePage={this.state.page}\r\n                                    displayLength={this.state.displayLength}\r\n                                    total={this.state.results.length}\r\n                                    onChangePage={this.handleChangePage}\r\n                                    onChangeLength={this.handleChangeLength}\r\n                                />\r\n                            </CardBody>\r\n                        </Card>\r\n\r\n                    </Col>\r\n                </Row>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _class, _temp2;\n\nexports.confirmAlert = confirmAlert;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _reactDom = require('react-dom');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar ReactConfirmAlert = (_temp2 = _class = function (_Component) {\n  _inherits(ReactConfirmAlert, _Component);\n\n  function ReactConfirmAlert() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, ReactConfirmAlert);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = ReactConfirmAlert.__proto__ || Object.getPrototypeOf(ReactConfirmAlert)).call.apply(_ref, [this].concat(args))), _this), _this.handleClickButton = function (button) {\n      if (button.onClick) button.onClick();\n      _this.close();\n    }, _this.handleClickOverlay = function (e) {\n      var _this$props = _this.props,\n          closeOnClickOutside = _this$props.closeOnClickOutside,\n          onClickOutside = _this$props.onClickOutside;\n\n      var isClickOutside = e.target === _this.overlay;\n\n      if (closeOnClickOutside && isClickOutside) {\n        onClickOutside();\n        _this.close();\n      }\n    }, _this.close = function () {\n      var afterClose = _this.props.afterClose;\n\n      removeBodyClass();\n      removeElementReconfirm();\n      removeSVGBlurReconfirm(afterClose);\n    }, _this.keyboardClose = function (event) {\n      var _this$props2 = _this.props,\n          closeOnEscape = _this$props2.closeOnEscape,\n          onKeypressEscape = _this$props2.onKeypressEscape;\n\n      var isKeyCodeEscape = event.keyCode === 27;\n\n      if (closeOnEscape && isKeyCodeEscape) {\n        onKeypressEscape(event);\n        _this.close();\n      }\n    }, _this.componentDidMount = function () {\n      document.addEventListener('keydown', _this.keyboardClose, false);\n    }, _this.componentWillUnmount = function () {\n      document.removeEventListener('keydown', _this.keyboardClose, false);\n      _this.props.willUnmount();\n    }, _this.renderCustomUI = function () {\n      var _this$props3 = _this.props,\n          title = _this$props3.title,\n          message = _this$props3.message,\n          buttons = _this$props3.buttons,\n          customUI = _this$props3.customUI;\n\n      var dataCustomUI = {\n        title: title,\n        message: message,\n        buttons: buttons,\n        onClose: _this.close\n      };\n\n      return customUI(dataCustomUI);\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(ReactConfirmAlert, [{\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var _props = this.props,\n          title = _props.title,\n          message = _props.message,\n          buttons = _props.buttons,\n          childrenElement = _props.childrenElement,\n          customUI = _props.customUI;\n\n\n      return _react2.default.createElement(\n        'div',\n        {\n          className: 'react-confirm-alert-overlay',\n          ref: function ref(dom) {\n            return _this2.overlay = dom;\n          },\n          onClick: this.handleClickOverlay\n        },\n        _react2.default.createElement(\n          'div',\n          { className: 'react-confirm-alert' },\n          customUI ? this.renderCustomUI() : _react2.default.createElement(\n            'div',\n            { className: 'react-confirm-alert-body' },\n            title && _react2.default.createElement(\n              'h1',\n              null,\n              title\n            ),\n            message,\n            childrenElement(),\n            _react2.default.createElement(\n              'div',\n              { className: 'react-confirm-alert-button-group' },\n              buttons.map(function (button, i) {\n                return _react2.default.createElement(\n                  'button',\n                  { key: i, onClick: function onClick() {\n                      return _this2.handleClickButton(button);\n                    }, className: button.className },\n                  button.label\n                );\n              })\n            )\n          )\n        )\n      );\n    }\n  }]);\n\n  return ReactConfirmAlert;\n}(_react.Component), _class.propTypes = {\n  title: _propTypes2.default.string,\n  message: _propTypes2.default.string,\n  buttons: _propTypes2.default.array.isRequired,\n  childrenElement: _propTypes2.default.func,\n  customUI: _propTypes2.default.func,\n  closeOnClickOutside: _propTypes2.default.bool,\n  closeOnEscape: _propTypes2.default.bool,\n  willUnmount: _propTypes2.default.func,\n  afterClose: _propTypes2.default.func,\n  onClickOutside: _propTypes2.default.func,\n  onKeypressEscape: _propTypes2.default.func\n}, _class.defaultProps = {\n  buttons: [{\n    label: 'Cancel',\n    onClick: function onClick() {\n      return null;\n    },\n    className: null\n  }, {\n    label: 'Confirm',\n    onClick: function onClick() {\n      return null;\n    },\n    className: null\n  }],\n  childrenElement: function childrenElement() {\n    return null;\n  },\n  closeOnClickOutside: true,\n  closeOnEscape: true,\n  willUnmount: function willUnmount() {\n    return null;\n  },\n  afterClose: function afterClose() {\n    return null;\n  },\n  onClickOutside: function onClickOutside() {\n    return null;\n  },\n  onKeypressEscape: function onKeypressEscape() {\n    return null;\n  }\n}, _temp2);\nexports.default = ReactConfirmAlert;\n\n\nfunction createSVGBlurReconfirm() {\n  // If has svg ignore to create the svg\n  var svg = document.getElementById('react-confirm-alert-firm-svg');\n  if (svg) return;\n  var svgNS = 'http://www.w3.org/2000/svg';\n  var feGaussianBlur = document.createElementNS(svgNS, 'feGaussianBlur');\n  feGaussianBlur.setAttribute('stdDeviation', '0.3');\n\n  var filter = document.createElementNS(svgNS, 'filter');\n  filter.setAttribute('id', 'gaussian-blur');\n  filter.appendChild(feGaussianBlur);\n\n  var svgElem = document.createElementNS(svgNS, 'svg');\n  svgElem.setAttribute('id', 'react-confirm-alert-firm-svg');\n  svgElem.setAttribute('class', 'react-confirm-alert-svg');\n  svgElem.appendChild(filter);\n\n  document.body.appendChild(svgElem);\n}\n\nfunction removeSVGBlurReconfirm(afterClose) {\n  var svg = document.getElementById('react-confirm-alert-firm-svg');\n  svg.parentNode.removeChild(svg);\n  document.body.children[0].classList.remove('react-confirm-alert-blur');\n  afterClose();\n}\n\nfunction createElementReconfirm(properties) {\n  var divTarget = document.getElementById('react-confirm-alert');\n  if (divTarget) {\n    // Rerender - the mounted ReactConfirmAlert\n    (0, _reactDom.render)(_react2.default.createElement(ReactConfirmAlert, properties), divTarget);\n  } else {\n    // Mount the ReactConfirmAlert component\n    document.body.children[0].classList.add('react-confirm-alert-blur');\n    divTarget = document.createElement('div');\n    divTarget.id = 'react-confirm-alert';\n    document.body.appendChild(divTarget);\n    (0, _reactDom.render)(_react2.default.createElement(ReactConfirmAlert, properties), divTarget);\n  }\n}\n\nfunction removeElementReconfirm() {\n  var target = document.getElementById('react-confirm-alert');\n  if (target) {\n    (0, _reactDom.unmountComponentAtNode)(target);\n    target.parentNode.removeChild(target);\n  }\n}\n\nfunction addBodyClass() {\n  document.body.classList.add('react-confirm-alert-body-element');\n}\n\nfunction removeBodyClass() {\n  document.body.classList.remove('react-confirm-alert-body-element');\n}\n\nfunction confirmAlert(properties) {\n  addBodyClass();\n  createSVGBlurReconfirm();\n  createElementReconfirm(properties);\n}"],"sourceRoot":""}